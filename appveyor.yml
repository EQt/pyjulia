environment:
  matrix:
  - JULIAVERSION: "julialang/bin/winnt/x86/0.4/julia-0.4-latest-win32.exe"
    PYTHONDIR: "C:\\Python27"
    PYTHON: "C:\\Python27\\python.exe"
  - JULIAVERSION: "julialang/bin/winnt/x64/0.4/julia-0.4-latest-win64.exe"
    PYTHONDIR: "C:\\Python27"
    PYTHON: "C:\\Python27\\python.exe"
  - JULIAVERSION: "julianightlies/bin/winnt/x86/julia-latest-win32.exe"
    PYTHONDIR: "C:\\Python27"
    PYTHON: "C:\\Python27\\python.exe"
  - JULIAVERSION: "julianightlies/bin/winnt/x64/julia-latest-win64.exe"
    PYTHONDIR: "C:\\Python27"
    PYTHON: "C:\\Python27\\python.exe"

branches:
  only:
    - master
    - /release-.*/

notifications:
  - provider: Email
    on_build_success: false
    on_build_failure: false
    on_build_status_changed: false

install:
# Download most recent Julia Windows binary
  - ps: (new-object net.webclient).DownloadFile(
        $("http://s3.amazonaws.com/"+$env:JULIAVERSION),
        "C:\projects\julia-binary.exe")
# Run installer silently, output to C:\projects\julia
  - C:\projects\julia-binary.exe /S /D=C:\projects\julia

build_script:
  - "SET PATH=%PYTHONDIR%;%PYTHONDIR%\\Scripts;%PATH%"
  - C:\projects\julia\bin\julia -e 'versioninfo(); Pkg.add("PyCall"); Pkg.init(); Pkg.resolve()'
  - C:\projects\julia\bin\julia -e "using PyCall; @assert isdefined(:PyCall); @assert typeof(PyCall) === Module'

test_script:
  - "SET PATH=%PYTHONDIR%;%PYTHONDIR%\\Scripts;%PATH%"
  - "SET JULIA_EXE=C:\\projects\\julia\\bin\\julia.exe"
  - python -m unittest discover
